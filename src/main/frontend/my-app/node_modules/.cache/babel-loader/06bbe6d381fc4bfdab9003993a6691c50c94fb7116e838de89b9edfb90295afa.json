{"ast":null,"code":"var _jsxFileName = \"/Users/ajor/Desktop/pcr/src/main/frontend/my-app/src/pages/Customize.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport DashboardLayout from \"../components/DashboardLayout\";\nimport BrandingSettings from \"../components/BrandingSettings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    primaryColor,\n    logoUrl,\n    updateTheme\n  } = useTheme();\n  const [color, setColor] = useState(primaryColor);\n  const [previewLogo, setPreviewLogo] = useState(logoUrl);\n  const handleColorChange = e => {\n    setColor(e.target.value);\n  };\n  const handleLogoChange = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const base64 = reader.result;\n        setPreviewLogo(base64);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSave = () => {\n    updateTheme(color, previewLogo);\n    alert(\"Theme updated!\");\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-semibold\",\n      children: \"Customize Brand Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BrandingSettings, {\n      color: color,\n      logoPreview: previewLogo,\n      onColorChange: handleColorChange,\n      onLogoChange: handleLogoChange,\n      onSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"WLQqR/DJZDHrO66h5GGJWJsqHgU=\", false, function () {\n  return [useTheme];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useTheme","DashboardLayout","BrandingSettings","jsxDEV","_jsxDEV","Dashboard","_s","primaryColor","logoUrl","updateTheme","color","setColor","previewLogo","setPreviewLogo","handleColorChange","e","target","value","handleLogoChange","_e$target$files","file","files","reader","FileReader","onloadend","base64","result","readAsDataURL","handleSave","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","logoPreview","onColorChange","onLogoChange","onSave","_c","$RefreshReg$"],"sources":["/Users/ajor/Desktop/pcr/src/main/frontend/my-app/src/pages/Customize.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport DashboardLayout from \"../components/DashboardLayout\";\nimport BrandingSettings from \"../components/BrandingSettings\";\n\nconst Dashboard: React.FC = () => {\n  const { primaryColor, logoUrl, updateTheme } = useTheme();\n  const [color, setColor] = useState(primaryColor);\n  const [previewLogo, setPreviewLogo] = useState<string | null>(logoUrl);\n\n  const handleColorChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setColor(e.target.value);\n  };\n\n  const handleLogoChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const base64 = reader.result as string;\n        setPreviewLogo(base64);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSave = () => {\n    updateTheme(color, previewLogo);\n    alert(\"Theme updated!\");\n  };\n\n  return (\n    <DashboardLayout>\n      <h1 className=\"text-2xl font-semibold\">Customize Brand Settings</h1>\n\n      <BrandingSettings\n        color={color}\n        logoPreview={previewLogo}\n        onColorChange={handleColorChange}\n        onLogoChange={handleLogoChange}\n        onSave={handleSave}\n      />\n    </DashboardLayout>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC,YAAY;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC;EACzD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACQ,YAAY,CAAC;EAChD,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAgBS,OAAO,CAAC;EAEtE,MAAMM,iBAAiB,GAAIC,CAAsC,IAAK;IACpEJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,gBAAgB,GAAIH,CAAsC,IAAK;IAAA,IAAAI,eAAA;IACnE,MAAMC,IAAI,IAAAD,eAAA,GAAGJ,CAAC,CAACC,MAAM,CAACK,KAAK,cAAAF,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC;IAChC,IAAIC,IAAI,EAAE;MACR,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACvB,MAAMC,MAAM,GAAGH,MAAM,CAACI,MAAgB;QACtCb,cAAc,CAACY,MAAM,CAAC;MACxB,CAAC;MACDH,MAAM,CAACK,aAAa,CAACP,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBnB,WAAW,CAACC,KAAK,EAAEE,WAAW,CAAC;IAC/BiB,KAAK,CAAC,gBAAgB,CAAC;EACzB,CAAC;EAED,oBACEzB,OAAA,CAACH,eAAe;IAAA6B,QAAA,gBACd1B,OAAA;MAAI2B,SAAS,EAAC,wBAAwB;MAAAD,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpE/B,OAAA,CAACF,gBAAgB;MACfQ,KAAK,EAAEA,KAAM;MACb0B,WAAW,EAAExB,WAAY;MACzByB,aAAa,EAAEvB,iBAAkB;MACjCwB,YAAY,EAAEpB,gBAAiB;MAC/BqB,MAAM,EAAEX;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEtB,CAAC;AAAC7B,EAAA,CAvCID,SAAmB;EAAA,QACwBL,QAAQ;AAAA;AAAAwC,EAAA,GADnDnC,SAAmB;AAyCzB,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}